name: Python package

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]

    steps:
      #----------------------------------------------
      #       check-out repo and set-up python
      #----------------------------------------------
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      #----------------------------------------------
      #  -----  install & configure poetry  -----
      #----------------------------------------------
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      #----------------------------------------------
      #       load cached venv if cache exists
      #----------------------------------------------
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      #----------------------------------------------
      # install dependencies if cache does not exist
      #----------------------------------------------
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: |
          poetry install --no-interaction --no-root --with dev
          source .venv/bin/activate
          pip install -e ".[dev]" 

      #----------------------------------------------
      #              run test suite
      #----------------------------------------------
      - name: Run tests
        run: |
          source .venv/bin/activate
          make test

      #----------------------------------------------
      #              run linting
      #----------------------------------------------
      - name: Check linting
        run: |
          source .venv/bin/activate
          flake8 packagename --count --select=E9,F63,F7,F82 --show-source --statistics
      # if you feel confident, you this line instead
      # flake8 packagename --count --ignore=E501 --show-source --statistics

      #----------------------------------------------
      #              run doc
      #----------------------------------------------
      - name: Install Pandoc
        run: |
          sudo apt-get install pandoc
      - name: Check Doc
        run: |
          source .venv/bin/activate
          make doc
